[versions]

accompanist = "0.37.0"
android-desugar = "2.1.4"
android-gradle-plugin = "8.7.3"
android-cache-fix-plugin = "3.0.1"
assertk = "0.28.1"

cashapp-turbine = "1.2.0"
catalogs-plugins = "1.3.2"
coil = "2.7.0"
composeicons = "1.1.1"

firebase-bom = "33.7.0"
fresco = "3.5.0"

glide = "4.16.0"
google-gms-plugin = "4.4.2"
gson = "2.11.0"

hilt = "2.53.1"

javapoet = "1.13.0"
jetbrains-compose = "1.7.3"
jsoup = "1.18.3"
junit4 = "4.13.2"
junit5 = "5.11.4"

koin = "4.0.0"
koin-annotations = "1.4.0"
kotlin = "2.1.0"
kotlinpoet = "2.0.0"
kotlinx-bcv = "0.17.0"
kotlinx-coroutines = "1.10.0"
kotlinx-datetime = "0.6.1"
kotlinx-html = "0.11.0"
kotlinx-immutablecollections = "0.3.8"
kotlinx-io = "0.6.0"
kotlinx-serialization = "1.7.3"
kradle = "2.0.2"
ksp = "2.1.0-1.0.29"

landscapist = "2.4.4"
leakcanary = "2.14"
lottie = "6.6.2"

material = "1.12.0"
mockito = "5.14.2"
mockito-kotlin = "5.4.0"
mockk = "1.13.14"
moshi = "1.15.2"

okhttp = "4.12.0"

protobuf = "4.29.2"
protobuf-gradle-plugin = "0.9.4"

retrofit = "2.11.0"
robolectric = "4.14.1"

sqldelight = "2.0.2"

timber = "5.0.1"
tomlj = "1.1.1"
truth = "1.4.4"

vanniktech-publish-gradle-plugin = "0.30.0"

[libraries]

accompanist-adaptive = { module = "com.google.accompanist:accompanist-adaptive", version.ref = "accompanist" }
accompanist-drawablepainter = { module = "com.google.accompanist:accompanist-drawablepainter", version.ref = "accompanist" }
accompanist-permissions = { module = "com.google.accompanist:accompanist-permissions", version.ref = "accompanist" }

android-desugar = { module = "com.android.tools:desugar_jdk_libs", version.ref = "android-desugar" }
android-desugar-nio = { module = "com.android.tools:desugar_jdk_libs_nio", version.ref = "android-desugar" }
android-gradleplugin = { module = "com.android.tools.build:gradle", version.ref = "android-gradle-plugin" }

assertk = { module = "com.willowtreeapps.assertk:assertk", version.ref = "assertk" }

cashapp-turbine = { module = "app.cash.turbine:turbine", version.ref = "cashapp-turbine" }
catalogs-androidplugins = { module = "io.github.lyxnx.gradle.android:android-plugins", version.ref = "catalogs-plugins" }
coil = { module = "io.coil-kt:coil", version.ref = "coil" }
coil-compose = { module = "io.coil-kt:coil-compose", version.ref = "coil" }
coil-gif = { module = "io.coil-kt:coil-gif", version.ref = "coil" }
coil-svg = { module = "io.coil-kt:coil-svg", version.ref = "coil" }
composeicons-cssgg = { module = "br.com.devsrsouza.compose.icons:css-gg", version.ref = "composeicons" }
composeicons-evaicons = { module = "br.com.devsrsouza.compose.icons:eva-icons", version.ref = "composeicons" }
composeicons-feather = { module = "br.com.devsrsouza.compose.icons:feather", version.ref = "composeicons" }
composeicons-fontawesome = { module = "br.com.devsrsouza.compose.icons:font-awesome", version.ref = "composeicons" }
composeicons-linea = { module = "br.com.devsrsouza.compose.icons:linea", version.ref = "composeicons" }
composeicons-lineawesome = { module = "br.com.devsrsouza.compose.icons:line-awesome", version.ref = "composeicons" }
composeicons-octicons = { module = "br.com.devsrsouza.compose.icons:octicons", version.ref = "composeicons" }
composeicons-simpleicons = { module = "br.com.devsrsouza.compose.icons:simple-icons", version.ref = "composeicons" }
composeicons-tablericons = { module = "br.com.devsrsouza.compose.icons:tabler-icons", version.ref = "composeicons" }
composeicons-weathericons = { module = "br.com.devsrsouza.compose.icons:erikflowers-weather-icons", version.ref = "composeicons" }

# Don't include versions for Firebase libs, as the Google recommendation is to use the BOM, even if only using 1 dependency
firebase-bom = { module = "com.google.firebase:firebase-bom", version.ref = "firebase-bom" }
firebase-analytics = { module = "com.google.firebase:firebase-analytics" }
firebase-analytics-ktx = { module = "com.google.firebase:firebase-analytics-ktx" }
firebase-appcheck = { module = "com.google.firebase:firebase-appcheck" }
firebase-appcheck-debug = { module = "com.google.firebase:firebase-appcheck-debug" }
firebase-appcheck-debug-testing = { module = "com.google.firebase:firebase-appcheck-debug-testing" }
firebase-appcheck-ktx = { module = "com.google.firebase:firebase-appcheck-ktx" }
firebase-appcheck-playintegrity = { module = "com.google.firebase:firebase-appcheck-playintegrity" }
firebase-appcheck-safetynet = { module = "com.google.firebase:firebase-appcheck-safetynet" }
firebase-auth = { module = "com.google.firebase:firebase-auth" }
firebase-auth-ktx = { module = "com.google.firebase:firebase-auth-ktx" }
firebase-common = { module = "com.google.firebase:firebase-common" }
firebase-common-ktx = { module = "com.google.firebase:firebase-common-ktx" }
firebase-config = { module = "com.google.firebase:firebase-config" }
firebase-config-ktx = { module = "com.google.firebase:firebase-config-ktx" }
firebase-crashlytics = { module = "com.google.firebase:firebase-crashlytics" }
firebase-crashlytics-ktx = { module = "com.google.firebase:firebase-crashlytics-ktx" }
firebase-crashlytics-ndk = { module = "com.google.firebase:firebase-crashlytics-ndk" }
firebase-database = { module = "com.google.firebase:firebase-database" }
firebase-database-ktx = { module = "com.google.firebase:firebase-database-ktx" }
firebase-dyanamiclinks = { module = "com.google.firebase:firebase-dynamic-links" }
firebase-dyanamiclinks-ktx = { module = "com.google.firebase:firebase-dynamic-links-ktx" }
firebase-encoders = { module = "com.google.firebase:firebase-encoders" }
firebase-firestore = { module = "com.google.firebase:firebase-firestore" }
firebase-firestore-ktx = { module = "com.google.firebase:firebase-firestore-ktx" }
firebase-functions = { module = "com.google.firebase:firebase-functions" }
firebase-functions-ktx = { module = "com.google.firebase:firebase-functions-ktx" }
firebase-inappmessaging = { module = "com.google.firebase:firebase-inappmessaging" }
firebase-inappmessaging-ktx = { module = "com.google.firebase:firebase-inappmessaging-ktx" }
firebase-inappmessaging-display = { module = "com.google.firebase:firebase-inappmessaging-display" }
firebase-inappmessaging-display-ktx = { module = "com.google.firebase:firebase-inappmessaging-display-ktx" }
firebase-installations = { module = "com.google.firebase:firebase-installations" }
firebase-installations-ktx = { module = "com.google.firebase:firebase-installations-ktx" }
firebase-messaging = { module = "com.google.firebase:firebase-messaging" }
firebase-messaging-ktx = { module = "com.google.firebase:firebase-messaging-ktx" }
firebase-messaging-directboot = { module = "com.google.firebase:firebase-messaging-directboot" }
firebase-ml-modeldownloader = { module = "com.google.firebase:firebase-ml-modeldownloader" }
firebase-ml-modeldownloader-ktx = { module = "com.google.firebase:firebase-ml-modeldownloader-ktx" }
firebase-perf = { module = "com.google.firebase:firebase-perf" }
firebase-perf-ktx = { module = "com.google.firebase:firebase-perf-ktx" }
firebase-storage = { module = "com.google.firebase:firebase-storage" }
firebase-storage-ktx = { module = "com.google.firebase:firebase-storage-ktx" }

fresco = { module = "com.facebook.fresco:fresco", version.ref = "fresco" }
fresco-animated-gif = { module = "com.facebook.fresco:animated-gif", version.ref = "fresco" }
fresco-animated-webp = { module = "com.facebook.fresco:animated-webp", version.ref = "fresco" }
fresco-webpsupport = { module = "com.facebook.fresco:webpsupport", version.ref = "fresco" }

glide = { module = "com.github.bumptech.glide:glide", version.ref = "glide" }
glide-compiler-kapt = { module = "com.github.bumptech.glide:compiler", version.ref = "glide" }
glide-compiler-ksp = { module = "com.github.bumptech.glide:ksp", version.ref = "glide" }

gson = { module = "com.google.code.gson:gson", version.ref = "gson" }

hilt = { module = "com.google.dagger:hilt-android", version.ref = "hilt" }
hilt-compiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "hilt" }
hilt-testing = { module = "com.google.dagger:hilt-android-testing", version.ref = "hilt" }

javapoet = { module = "com.squareup:javapoet", version.ref = "javapoet" }

jetbrains-compose-gradleplugin = { module = "org.jetbrains.compose:org.jetbrains.compose.gradle.plugin", version.ref = "jetbrains-compose" }

jsoup = { module = "org.jsoup:jsoup", version.ref = "jsoup" }

junit4 = { module = "junit:junit", version.ref = "junit4" }
junit5-jupiter = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junit5" }
junit5-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit5" }
junit5-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit5" }
junit5-jupiter-params = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "junit5" }
junit5-jupiter-migrationsupport = { module = "org.junit.jupiter:junit-jupiter-migrationsupport", version.ref = "junit5" }
junit5-vintage-engine = { module = "org.junit.vintage:junit-vintage-engine", version.ref = "junit5" }

landscapist = { module = "com.github.skydoves:landscapist", version.ref = "landscapist" }
landscapist-animation = { module = "com.github.skydoves:landscapist-animation", version.ref = "landscapist" }
landscapist-bom = { module = "com.github.skydoves:landscapist-bom", version.ref = "landscapist" }
landscapist-coil = { module = "com.github.skydoves:landscapist-coil", version.ref = "landscapist" }
landscapist-fresco = { module = "com.github.skydoves:landscapist-fresco", version.ref = "landscapist" }
landscapist-fresco-websupport = { module = "com.github.skydoves:landscapist-fresco-websupport", version.ref = "landscapist" }
landscapist-glide = { module = "com.github.skydoves:landscapist-glide", version.ref = "landscapist" }
landscapist-palete = { module = "com.github.skydoves:landscapist-palette", version.ref = "landscapist" }
landscapist-placeholder = { module = "com.github.skydoves:landscapist-placeholder", version.ref = "landscapist" }
landscapist-transformation = { module = "com.github.skydoves:landscapist-transformation", version.ref = "landscapist" }

leakcanary = { module = "com.squareup.leakcanary:leakcanary-android", version.ref = "leakcanary" }

lottie = { module = "com.airbnb.android:lottie", version.ref = "lottie" }
lottie-compose = { module = "com.airbnb.android:lottie-compose", version.ref = "lottie" }

koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-core-coroutines = { module = "io.insert-koin:koin-core-coroutines", version.ref = "koin" }
koin-test = { module = "io.insert-koin:koin-test", version.ref = "koin" }
koin-test-junit4 = { module = "io.insert-koin:koin-test-junit4", version.ref = "koin" }
koin-test-junit5 = { module = "io.insert-koin:koin-test-junit5", version.ref = "koin" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-android-test = { module = "io.insert-koin:koin-android-test", version.ref = "koin" }
koin-android-compat = { module = "io.insert-koin:koin-android-compat", version.ref = "koin" }
koin-androidx-navigation = { module = "io.insert-koin:koin-androidx-navigation", version.ref = "koin" }
koin-androidx-workmanager = { module = "io.insert-koin:koin-androidx-workmanager", version.ref = "koin" }
koin-androidx-compose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koin" }
koin-androidx-compose-navigation = { module = "io.insert-koin:koin-androidx-compose-navigation", version.ref = "koin" }
koin-ktor = { module = "io.insert-koin:koin-ktor", version.ref = "koin" }
koin-logger-slf4j = { module = "io.insert-koin:koin-logger-slf4j", version.ref = "koin" }
koin-annotations = { module = "io.insert-koin:koin-annotations", version.ref = "koin-annotations" }
koin-ksp-compiler = { module = "io.insert-koin:koin-ksp-compiler", version.ref = "koin-annotations" }

kotlin-compose-gradleplugin = { module = "org.jetbrains.kotlin:compose-compiler-gradle-plugin", version.ref = "kotlin" }
kotlin-gradleplugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlin" }
kotlin-stdlib-jdk7 = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk7", version.ref = "kotlin" }
kotlin-stdlib-jdk8 = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8", version.ref = "kotlin" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
kotlin-test-junit5 = { module = "org.jetbrains.kotlin:kotlin-test-junit5", version.ref = "kotlin" }

kotlinpoet = { module = "com.squareup:kotlinpoet", version.ref = "kotlinpoet" }
kotlinpoet-ksp = { module = "com.squareup:kotlinpoet-ksp", version.ref = "kotlinpoet" }

kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinx-coroutines" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }
kotlinx-html = { module = "org.jetbrains.kotlinx:kotlinx-html", version.ref = "kotlinx-html" }
kotlinx-immutablecollections = { module = "org.jetbrains.kotlinx:kotlinx-collections-immutable", version.ref = "kotlinx-immutablecollections" }
kotlinx-io-core = { module = "org.jetbrains.kotlinx:kotlinx-io-core", version.ref = "kotlinx-io" }
kotlinx-serialization-core = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "kotlinx-serialization" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
kotlinx-serialization-cbor = { module = "org.jetbrains.kotlinx:kotlinx-serialization-cbor", version.ref = "kotlinx-serialization" }
kotlinx-serialization-protobuf = { module = "org.jetbrains.kotlinx:kotlinx-serialization-protobuf", version.ref = "kotlinx-serialization" }
kotlinx-serialization-properties = { module = "org.jetbrains.kotlinx:kotlinx-serialization-properties", version.ref = "kotlinx-serialization" }

kradle-common = { module = "io.github.lyxnx.kradle:kradle-common", version.ref = "kradle" }
kradle-utils = { module = "io.github.lyxnx.kradle:kradle-utils", version.ref = "kradle" }
kradle-android-gradleplugin = { module = "io.github.lyxnx.kradle:kradle-android", version.ref = "kradle" }
kradle-kotlin-gradleplugin = { module = "io.github.lyxnx.kradle:kradle-kotlin", version.ref = "kradle" }

ksp-gradleplugin = { module = "com.google.devtools.ksp:symbol-processing-gradle-plugin", version.ref = "ksp" }
ksp-api = { module = "com.google.devtools.ksp:symbol-processing-api", version.ref = "ksp" }

material = { module = "com.google.android.material:material", version.ref = "material" }

mockito-core = { module = "org.mockito:mockito-core", version.ref = "mockito" }
mockito-android = { module = "org.mockito:mockito-android", version.ref = "mockito" }
mockito-kotlin = { module = "org.mockito.kotlin:mockito-kotlin", version.ref = "mockito-kotlin" }

mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
mockk-android = { module = "io.mockk:mockk-android", version.ref = "mockk" }
mockk-agent = { module = "io.mockk:mockk-agent", version.ref = "mockk" }

moshi = { module = "com.squareup.moshi:moshi", version.ref = "moshi" }
moshi-adapters = { module = "com.squareup.moshi:moshi-adapters", version.ref = "moshi" }
moshi-kotlin = { module = "com.squareup.moshi:moshi-kotlin", version.ref = "moshi" }
moshi-kotlin-codegen = { module = "com.squareup.moshi:moshi-kotlin-codegen", version.ref = "moshi" }

okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
okhttp-logginginterceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }

protobuf-java = { module = "com.google.protobuf:protobuf-java", version.ref = "protobuf" }
protobuf-java-lite = { module = "com.google.protobuf:protobuf-javalite", version.ref = "protobuf" }
protobuf-java-util = { module = "com.google.protobuf:protobuf-java-util", version.ref = "protobuf" }
protobuf-kotlin = { module = "com.google.protobuf:protobuf-kotlin", version.ref = "protobuf" }
protobuf-kotlin-lite = { module = "com.google.protobuf:protobuf-kotlin-lite", version.ref = "protobuf" }
protobuf-protoc = { module = "com.google.protobuf:protoc", version.ref = "protobuf" }

retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofit-converter-gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofit" }
retrofit-converter-guava = { module = "com.squareup.retrofit2:converter-guava", version.ref = "retrofit" }
retrofit-converter-jackson = { module = "com.squareup.retrofit2:converter-jackson", version.ref = "retrofit" }
retrofit-converter-kotlinx-serialization = { module = "com.squareup.retrofit2:converter-kotlinx-serialization", version.ref = "retrofit" }
retrofit-converter-moshi = { module = "com.squareup.retrofit2:converter-moshi", version.ref = "retrofit" }
retrofit-converter-protobuf = { module = "com.squareup.retrofit2:converter-protobuf", version.ref = "retrofit" }
retrofit-converter-scalars = { module = "com.squareup.retrofit2:converter-scalars", version.ref = "retrofit" }
retrofit-converter-wire = { module = "com.squareup.retrofit2:converter-wire", version.ref = "retrofit" }

robolectric = { module = "org.robolectric:robolectric", version.ref = "robolectric" }

sqldelight-adapter-primitives = { module = "app.cash.sqldelight:primitive-adapters", version.ref = "sqldelight" }
sqldelight-driver-android = { module = "app.cash.sqldelight:android-driver", version.ref = "sqldelight" }
sqldelight-driver-native = { module = "app.cash.sqldelight:native-driver", version.ref = "sqldelight" }
sqldelight-driver-sqlite = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqldelight" }
sqldelight-extension-androidxpaging = { module = "app.cash.sqldelight:androidx-paging3-extensions", version.ref = "sqldelight" }
sqldelight-extension-coroutines = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqldelight" }
sqldelight-runtime = { module = "app.cash.sqldelight:runtime", version.ref = "sqldelight" }

timber = { module = "com.jakewharton.timber:timber", version.ref = "timber" }
tomlj = { module = "org.tomlj:tomlj", version.ref = "tomlj" }
truth = { module = "com.google.truth:truth", version.ref = "truth" }

vanniktech-publish-gradleplugin = { module = "com.vanniktech:gradle-maven-publish-plugin", version.ref = "vanniktech-publish-gradle-plugin" }

[plugins]

android-application = { id = "com.android.application", version.ref = "android-gradle-plugin" }
android-library = { id = "com.android.library", version.ref = "android-gradle-plugin" }
android-cachefix = { id = "org.gradle.android.cache-fix", version.ref = "android-cache-fix-plugin" }

catalogs-compose-compiler = { id = "io.github.lyxnx.gradle.android-compose-compiler", version.ref = "catalogs-plugins" }
catalogs-compose-ui = { id = "io.github.lyxnx.gradle.android-compose-ui", version.ref = "catalogs-plugins" }
catalogs-room = { id = "io.github.lyxnx.gradle.android-room", version.ref = "catalogs-plugins" }

gms = { id = "com.google.gms.google-services", version.ref = "google-gms-plugin" }

hilt = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }

jetbrains-compose = { id = "org.jetbrains.compose", version.ref = "jetbrains-compose" }

kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-compose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
kotlin-parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlin" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }

kotlinx-binarycompatibilityvalidator = { id = "org.jetbrains.kotlinx.binary-compatibility-validator", version.ref = "kotlinx-bcv" }

kradle-android-application = { id = "io.github.lyxnx.kradle.android-application", version.ref = "kradle" }
kradle-android-config = { id = "io.github.lyxnx.kradle.android-config", version.ref = "kradle" }
kradle-android-library = { id = "io.github.lyxnx.kradle.android-library", version.ref = "kradle" }
kradle-kotlin-config = { id = "io.github.lyxnx.kradle.kotlin-config", version.ref = "kradle" }
kradle-kotlin-library = { id = "io.github.lyxnx.kradle.kotlin-library", version.ref = "kradle" }

ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }

protobuf = { id = "com.google.protobuf", version.ref = "protobuf-gradle-plugin" }

sqldelight = { id = "app.cash.sqldelight", version.ref = "sqldelight" }

vanniktech-publish = { id = "com.vanniktech.maven.publish", version.ref = "vanniktech-publish-gradle-plugin" }
